services:
  # nextapp:
  #   container_name: nextapp
  #   build:
  #     context: ./frontend
  #     dockerfile: next.dockerfile
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./frontend:/app
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:8000/api
  #     - PUBLIC_API_URL=http://localhost:8000/api
  #     - NEXT_TELEMETRY_DISABLED=1
  #   depends_on:
  #     - goapp
  goapp:
    container_name: goapp
    build:
      context: ./backend
      dockerfile: go.dockerfile
      target: reload
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres?sslmode=disable
      - ENCRYPTION_KEY=7a34ff36240775e4236935eb4afc8f389c24d6de050853f73206de712d1eaa8f
      - JWT_SECRET=5d52e06e477175db56161bf17b544710850c14cb8b3cc2ce5e42330c001ceb4e
    ports:
      - 8000:8000
    security_opt:
      - seccomp:unconfined
    depends_on:
      - db
    volumes:
      - ./backend:/app

  goapp_debug:
    container_name: goapp_debug
    build:
      context: ./backend
      dockerfile: go.dockerfile
      target: debug
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres?sslmode=disable
      - ENCRYPTION_KEY=7a34ff36240775e4236935eb4afc8f389c24d6de050853f73206de712d1eaa8f
      - JWT_SECRET=5d52e06e477175db56161bf17b544710850c14cb8b3cc2ce5e42330c001ceb4e
    ports:
      - 8000:8000
      - 2345:2345
    depends_on:
      - db
    volumes:
      - ./backend:/app

  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata: {}
